for(i in 1:n) {
string <- table[i,"Date"]
date <- word(string,1)
cost <- word(string,-1)
table[i,"Date"] <- date
table[i,"Amount"] <- cost
}
file <- "a.txt"
con <- file("a.txt","r")
fileConn<-file("output.txt")
table <- data.frame(Date = scan(file = "a.txt",character(), sep = "\n"), stringsAsFactors = FALSE)
n <- nrow(table)
amount <- c()
table$Amount <- 0
for(i in 1:n) {
string <- table[i,"Date"]
date <- word(string,1)
cost <- word(string,-1)
table[i,"Date"] <- date
table[i,"Amount"] <- cost
}
close(fileConn)
con <- file("a.txt","r")
first_line <- readLines(con,n=1)
library(xlsx)
library(textreadr)
library(stringr)
#Name of Document with bank statement
#NOTE: Word Doc must have date in the front and amount at the end for this to work.
file <- "July.docx"
con <- file(file,"r")
fileConn<-file("output.txt")
table <- data.frame(Date = read_docx(file),stringsAsFactors = FALSE)
n <- nrow(table)
amount <- c()
table$Amount <- NA
for(i in 1:n) {
string <- table[i,"Date"]
date <- word(string,1)
cost <- word(string,-1)
table[i,"Date"] <- date
table[i,"Amount"] <- cost
}
#Exports table to excel file
write.xlsx(table, "Bank_Statement_Export.xlsx", row.names = FALSE)
#Closes the files in use
close(con)
close(fileConn)
file <- "July.docx"
con <- file(file,"r")
table <- data.frame(Date = read_docx(file),stringsAsFactors = FALSE)
n <- nrow(table)
amount <- c()
table$Amount <- NA
for(i in 1:n) {
string <- table[i,"Date"]
date <- word(string,1)
cost <- word(string,-1)
table[i,"Date"] <- date
table[i,"Amount"] <- cost
}
#Exports table to excel file
write.xlsx(table, "Bank_Statement_Export.xlsx", row.names = FALSE)
#Closes the files in use
close(con)
name <- "August"
file <- paste0(name,".docx")
export_file <- paste0(name,".xlsx")
name <- "August"
file <- paste0(name,".docx")
export_file <- paste0(name,".xlsx")
con <- file(file,"r")
table <- data.frame(Date = read_docx(file),stringsAsFactors = FALSE)
n <- nrow(table)
amount <- c()
table$Amount <- NA
for(i in 1:n) {
string <- table[i,"Date"]
date <- word(string,1)
cost <- word(string,-1)
table[i,"Date"] <- date
table[i,"Amount"] <- cost
}
#Exports table to excel file
write.xlsx(table, export_file, row.names = FALSE)
#Closes the files in use
close(con)
name <- "August"
file <- paste0(name,".docx")
export_file <- paste0(name,".xlsx")
con <- file(file,"r")
table <- data.frame(Date = read_docx(file),stringsAsFactors = FALSE)
n <- nrow(table)
amount <- c()
table$Amount <- NA
for(i in 1:n) {
string <- table[i,"Date"]
date <- word(string,1)
cost <- word(string,-1)
table[i,"Date"] <- date
table[i,"Amount"] <- cost
}
#Exports table to excel file
write.xlsx(table, export_file, row.names = FALSE)
#Closes the files in use
close(con)
name <- "August"
file <- paste0(name,".docx")
export_file <- paste0(name,".xlsx")
con <- file(file,"r")
table <- data.frame(Date = read_docx(file),stringsAsFactors = FALSE)
n <- nrow(table)
amount <- c()
table$Amount <- NA
for(i in 1:n) {
string <- table[i,"Date"]
date <- word(string,1)
cost <- word(string,-1)
table[i,"Date"] <- date
table[i,"Amount"] <- cost
}
#Exports table to excel file
write.xlsx(table, export_file, row.names = FALSE)
#Closes the files in use
close(con)
name <- "September"
file <- paste0(name,".docx")
export_file <- paste0(name,".xlsx")
con <- file(file,"r")
table <- data.frame(Date = read_docx(file),stringsAsFactors = FALSE)
n <- nrow(table)
amount <- c()
table$Amount <- NA
for(i in 1:n) {
string <- table[i,"Date"]
date <- word(string,1)
cost <- word(string,-1)
table[i,"Date"] <- date
table[i,"Amount"] <- cost
}
#Exports table to excel file
write.xlsx(table, export_file, row.names = FALSE)
#Closes the files in use
close(con)
temp_prec_data <- read.csv("temp_prec_subset.csv.bz2", stringsAsFactors = FALSE)
library("data.table")
library("dplyr")
library("ggplot2")
library("labeling")
temp_prec_data <- read.csv("temp_prec_subset.csv.bz2", stringsAsFactors = FALSE)
temp_prec_data <- read.csv("temp_prec_subset.csv.bz2", stringsAsFactors = FALSE)
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
#View(hospital.compare.data)
setwd("~/info201/INFO201FinalProject")
world.data <- read.csv("first-2470-latlong.csv")
world.data <- read.csv("first-2470-latlong.csv")
test <- select(world.data, State, lon,lat, Hospital.Name,Phone.Number, Hospital.overall.rating, Address, City, State, ZIP.Code)
test.next <- test[rowSums(is.na(test)) == 0,]
test.next$link <- paste0("https://www.google.com/search?q=", test.next$Hospital.Name)
test.next$link <- paste0("<a href='",test.next$link,"'>"," Link to Hospital" ,"</a>")
test.next$Hospital.Name <- str_to_title(test.next$Hospital.Name)
test.next$Phone.Number <- gsub("(\\d{3})(\\d{3})(\\d{4})$","\\1-\\2-\\3",test.next$Phone.Number)
test.next$Phone.Number <- sub("(.{3})(.*)", "(\\1)\\2", test.next$Phone.Number)
test.next$lon <- as.numeric(as.character(test.next$lon))
test.next$lat <- as.numeric(as.character(test.next$lat))
library("stringr")
setwd("~/info201/INFO201FinalProject")
world.data <- read.csv("first-2470-latlong.csv")
test <- select(world.data, State, lon,lat, Hospital.Name,Phone.Number, Hospital.overall.rating, Address, City, State, ZIP.Code)
test.next <- test[rowSums(is.na(test)) == 0,]
test.next$link <- paste0("https://www.google.com/search?q=", test.next$Hospital.Name)
test.next$link <- paste0("<a href='",test.next$link,"'>"," Link to Hospital" ,"</a>")
test.next$Hospital.Name <- str_to_title(test.next$Hospital.Name)
test.next$Phone.Number <- gsub("(\\d{3})(\\d{3})(\\d{4})$","\\1-\\2-\\3",test.next$Phone.Number)
test.next$Phone.Number <- sub("(.{3})(.*)", "(\\1)\\2", test.next$Phone.Number)
test.next$lon <- as.numeric(as.character(test.next$lon))
test.next$lat <- as.numeric(as.character(test.next$lat))
shiny::runApp('~/Info201/INFO201FinalProject')
us.data <- read.csv("first-2470-latlong.csv")
test <- select(us.data, State, lon,lat, Hospital.Name,Phone.Number, Hospital.overall.rating, Address, City, State, ZIP.Code)
test.next <- test[rowSums(is.na(test)) == 0,]
test.next$link <- paste0("https://www.google.com/search?q=", test.next$Hospital.Name)
test.next$link <- paste0("<a href='",test.next$link,"'>"," Link to Hospital" ,"</a>")
test.next$Hospital.Name <- str_to_title(test.next$Hospital.Name)
test.next$Phone.Number <- gsub("(\\d{3})(\\d{3})(\\d{4})$","\\1-\\2-\\3",test.next$Phone.Number)
test.next$Phone.Number <- sub("(.{3})(.*)", "(\\1)\\2", test.next$Phone.Number)
test.next$lon <- as.numeric(as.character(test.next$lon))
test.next$lat <- as.numeric(as.character(test.next$lat))
US.data <- read.csv("first-2470-latlong.csv")
US.filtered.data
US.filtered.data <- select(US.data, State, lon,lat, Hospital.Name,Phone.Number, Hospital.overall.rating, Address, City, State, ZIP.Code)
US.filtered.data <- US.filtered.data[rowSums(is.na(US.filtered.data)) == 0,]
US.data <- read.csv("first-2470-latlong.csv")
US.filtered.data <- select(US.data, State, lon,lat, Hospital.Name,Phone.Number, Hospital.overall.rating, Address, City, State, ZIP.Code)
US.filtered.data <- US.filtered.data[rowSums(is.na(US.filtered.data)) == 0,]
US.filtered.data$link <- paste0("https://www.google.com/search?q=", US.filtered.data$Hospital.Name)
US.filtered.data$link <- paste0("<a href='",US.filtered.data$link,"'>"," Link to Hospital" ,"</a>")
US.filtered.data$Hospital.Name <- str_to_title(test.next$Hospital.Name)
US.filtered.data$Phone.Number <- gsub("(\\d{3})(\\d{3})(\\d{4})$","\\1-\\2-\\3",US.filtered.data$Phone.Number)
US.filtered.data$Phone.Number <- sub("(.{3})(.*)", "(\\1)\\2", US.filtered.data$Phone.Number)
US.filtered.data$lon <- as.numeric(as.character(US.filtered.data$lon))
US.filtered.data$lat <- as.numeric(as.character(US.filtered.data$lat))
leaflet(data = US.filtered.data) %>% addTiles() %>%
addMarkers( ~US.filtered.data$lon, ~US.filtered.data$lat,
popup = paste(
US.filtered.data$Hospital.Name, "<br>",
US.filtered.data$Address, "<br>",
US.filtered.data$City, US.filtered.data$State, US.filtered.data$ZIP.Code, "<br>",
"Number:", US.filtered.data$Phone.Number, "<br>",
"Hospital overall rating:", US.filtered.data$Hospital.overall.rating, "<br>",
US.filtered.data$link
),
clusterOptions = markerClusterOptions(),
icon = hospital
)
US.data <- read.csv("first-2470-latlong.csv")
US.filtered.data <- select(US.data, State, lon,lat, Hospital.Name,Phone.Number, Hospital.overall.rating, Address, City, State, ZIP.Code)
US.filtered.data <- US.filtered.data[rowSums(is.na(US.filtered.data)) == 0,]
US.filtered.data$link <- paste0("https://www.google.com/search?q=", US.filtered.data$Hospital.Name)
US.filtered.data$link <- paste0("<a href='",US.filtered.data$link,"'>"," Link to Hospital" ,"</a>")
US.filtered.data$Hospital.Name <- str_to_title(test.next$Hospital.Name)
US.filtered.data$Phone.Number <- gsub("(\\d{3})(\\d{3})(\\d{4})$","\\1-\\2-\\3",US.filtered.data$Phone.Number)
US.filtered.data$Phone.Number <- sub("(.{3})(.*)", "(\\1)\\2", US.filtered.data$Phone.Number)
US.filtered.data$lon <- as.numeric(as.character(US.filtered.data$lon))
US.filtered.data$lat <- as.numeric(as.character(US.filtered.data$lat))
View(US.filtered.data)
leaflet(data = US.filtered.data) %>% addTiles() %>%
addMarkers( ~US.filtered.data$lon, ~US.filtered.data$lat,
popup = paste(
US.filtered.data$Hospital.Name, "<br>",
US.filtered.data$Address, "<br>",
US.filtered.data$City, US.filtered.data$State, US.filtered.data$ZIP.Code, "<br>",
"Number:", US.filtered.data$Phone.Number, "<br>",
"Hospital overall rating:", US.filtered.data$Hospital.overall.rating, "<br>",
US.filtered.data$link
),
clusterOptions = markerClusterOptions(),
icon = hospital
)
hospital <- makeIcon("Hospital.jpg",40,40)
icon = hospital
leaflet(data = US.filtered.data) %>% addTiles() %>%
addMarkers( ~US.filtered.data$lon, ~US.filtered.data$lat,
popup = paste(
US.filtered.data$Hospital.Name, "<br>",
US.filtered.data$Address, "<br>",
US.filtered.data$City, US.filtered.data$State, US.filtered.data$ZIP.Code, "<br>",
"Number:", US.filtered.data$Phone.Number, "<br>",
"Hospital overall rating:", US.filtered.data$Hospital.overall.rating, "<br>",
US.filtered.data$link
),
clusterOptions = markerClusterOptions(),
icon = hospital
)
runApp('~/Info201/INFO201FinalProject')
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
View(US.filtered.data)
shiny::runApp()
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
hospital.base.url <- "https://data.medicare.gov/resource/"
hospital.complications.url <- paste0(hospital.base.url, "ukfj-tt6v")
hospital.measures.url <- paste0(hospital.base.url, "w5ci-7egs")
hospital.readmissions.url <- paste0(hospital.base.url, "9n3s-kdb3")
hospital.spending.url <- paste0(hospital.base.url, "rrqw-56er")
hospital.compare.url <- paste0(hospital.base.url, "xubh-q36u")
hospital.complications.data <- select(hospital.complications.result, hospital_name, measure_name, score) %>%
filter(measure_name == "Death rate for CABG" | measure_name == "Heart failure (HF) 30-Day Mortality Rate" | measure_name == "Acute Myocardial Infarction (AMI) 30-Day Mortality Rate")
# View(hospital.complications.data)
#setwd("~/info201/INFO201FinalProject")
US.data <- read.csv("data/first-2470-latlong.csv")
#Filter only relevent information
US.filtered.data <- select(US.data, State, lon,lat, Hospital.Name,Phone.Number, Hospital.overall.rating, Address, City, State, ZIP.Code)
#Remove locations with NUll data
US.filtered.data <- US.filtered.data[rowSums(is.na(US.filtered.data)) == 0,]
#Creates Column for hospital hyperlink
US.filtered.data$link <- paste0("https://www.google.com/search?q=", US.filtered.data$Hospital.Name)
US.filtered.data$link <- paste0("<a href='",US.filtered.data$link,"'>"," Link to Hospital" ,"</a>")
#Fix Hospital name and Phone Numbers
US.filtered.data$Hospital.Name <- str_to_title(US.filtered.data$Hospital.Name)
US.filtered.data$Phone.Number <- gsub("(\\d{3})(\\d{3})(\\d{4})$","\\1-\\2-\\3",US.filtered.data$Phone.Number)
US.filtered.data$Phone.Number <- sub("(.{3})(.*)", "(\\1)\\2", US.filtered.data$Phone.Number)
#Convert long and lat to numeric for leaflet
US.filtered.data$lon <- as.numeric(as.character(US.filtered.data$lon))
US.filtered.data$lat <- as.numeric(as.character(US.filtered.data$lat))
#setwd("~/info201/INFO201FinalProject")
US.data <- read.csv("data/first-2470-latlong.csv")
#Filter only relevent information
US.filtered.data <- select(US.data, State, lon,lat, Hospital.Name,Phone.Number, Hospital.overall.rating, Address, City, State, ZIP.Code)
#Remove locations with NUll data
US.filtered.data <- US.filtered.data[rowSums(is.na(US.filtered.data)) == 0,]
#Creates Column for hospital hyperlink
US.filtered.data$link <- paste0("https://www.google.com/search?q=", US.filtered.data$Hospital.Name)
US.filtered.data$link <- paste0("<a href='",US.filtered.data$link,"'>"," Link to Hospital" ,"</a>")
#Fix Hospital name and Phone Numbers
US.filtered.data$Hospital.Name <- str_to_title(US.filtered.data$Hospital.Name)
US.filtered.data$Phone.Number <- gsub("(\\d{3})(\\d{3})(\\d{4})$","\\1-\\2-\\3",US.filtered.data$Phone.Number)
US.filtered.data$Phone.Number <- sub("(.{3})(.*)", "(\\1)\\2", US.filtered.data$Phone.Number)
#Convert long and lat to numeric for leaflet
US.filtered.data$lon <- as.numeric(as.character(US.filtered.data$lon))
US.filtered.data$lat <- as.numeric(as.character(US.filtered.data$lat))
US.data <- read.csv("data/General_Hospital_Information_Lat_Lon.csv")
#Filter only relevent information
US.filtered.data <- select(US.data, State, lon,lat, Hospital.Name,Phone.Number, Hospital.overall.rating, Address, City, State, ZIP.Code)
#Remove locations with NUll data
US.filtered.data <- US.filtered.data[rowSums(is.na(US.filtered.data)) == 0,]
#Creates Column for hospital hyperlink
US.filtered.data$link <- paste0("https://www.google.com/search?q=", US.filtered.data$Hospital.Name)
US.filtered.data$link <- paste0("<a href='",US.filtered.data$link,"'>"," Link to Hospital" ,"</a>")
#Fix Hospital name and Phone Numbers
US.filtered.data$Hospital.Name <- str_to_title(US.filtered.data$Hospital.Name)
US.filtered.data$Phone.Number <- gsub("(\\d{3})(\\d{3})(\\d{4})$","\\1-\\2-\\3",US.filtered.data$Phone.Number)
US.filtered.data$Phone.Number <- sub("(.{3})(.*)", "(\\1)\\2", US.filtered.data$Phone.Number)
#Convert long and lat to numeric for leaflet
US.filtered.data$lon <- as.numeric(as.character(US.filtered.data$lon))
US.filtered.data$lat <- as.numeric(as.character(US.filtered.data$lat))
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
hospital.HF.test <- subset(hospital.HF.data, Hospital.Name %in% hospital.names.spending)
hospital.names.spending <- hospital.spending.test[, 1]
hospital.names.spending <- as.character(hospital.names.spending)
hospital.HF.test <- subset(hospital.HF.data, Hospital.Name %in% hospital.names.spending)
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
shiny::runApp()
runApp()
View(US.filtered.data)
US.data <- read.csv("data/General_Hospital_Information_Lat_Lon.csv")
#Filter only relevent information
US.filtered.data <- select(US.data, State, lon,lat, Hospital.Name,Phone.Number, Hospital.overall.rating, Address, City, State, ZIP.Code)
#Remove locations with NUll data
US.filtered.data <- US.filtered.data[rowSums(is.na(US.filtered.data)) == 0,]
#Creates Column for hospital hyperlink
US.filtered.data$link <- paste0("https://www.google.com/search?q=", US.filtered.data$Hospital.Name)
US.filtered.data$link <- paste0("<a href='",US.filtered.data$link,"'>"," Link to Hospital" ,"</a>")
#Fix Hospital name and Phone Numbers
US.filtered.data$Hospital.Name <- str_to_title(US.filtered.data$Hospital.Name)
US.filtered.data$Phone.Number <- gsub("(\\d{3})(\\d{3})(\\d{4})$","\\1-\\2-\\3",US.filtered.data$Phone.Number)
US.filtered.data$Phone.Number <- sub("(.{3})(.*)", "(\\1)\\2", US.filtered.data$Phone.Number)
#Convert long and lat to numeric for leaflet
US.filtered.data$lon <- as.numeric(as.character(US.filtered.data$lon))
US.filtered.data$lat <- as.numeric(as.character(US.filtered.data$lat))
View(US.filtered.data)
View(US.filtered.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
jscode <- '
$(document).on("shiny:connected", function(e) {
var jsHeight = window.innerHeight;
Shiny.onInputChange("GetScreenHeight",jsHeight);
});
'
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
jscode <- '
$(document).on("shiny:connected", function(e) {
var jsHeight = window.innerHeight;
Shiny.onInputChange("GetScreenHeight",jsHeight);
});
'
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
is.vector(US.filtered.data$State)
is.list(US.filtered.data$State)
US.filtered.data$State
runApp()
runApp()
is.factor(US.filtered.data$State)
runApp()
hello <- c(US.filtered.data$State)
hello <- c(US.filtered.data$State, "All")
hello <- c(US.filtered.data$State)
hello <- c(US.filtered.data$State, "All")
hello
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
leaflet(data = US.map.data) %>% addTiles() %>%
addMarkers( ~US.map.data$lon, ~US.map.data$lat,
popup = paste(
US.map.data$Hospital.Name, "<br>",
US.map.data$Address, "<br>",
US.map.data$City, US.map.data$State, US.map.data$ZIP.Code, "<br>",
"Number:", US.map.data$Phone.Number, "<br>",
"Hospital overall rating:", US.map.data$Hospital.overall.rating, "<br>",
US.map.data$link
),
clusterOptions = markerClusterOptions()
#Implements Icon
#, icon = hospital
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
runApp()
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
runApp()
runApp()
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
runApp()
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
View(US.data)
US.filtered.data <- select(Provider.ID,US.data, State, lon,lat, Hospital.Name,Phone.Number, Hospital.overall.rating, Address, City, State, ZIP.Code)
US.filtered.data <- select(Provider.ID,US.data, State, lon,lat, Hospital.Name,Phone.Number, Hospital.overall.rating, Address, City, State, ZIP.Code)
US.filtered.data <- select(Provider.ID,US.data, State, lon,lat, Hospital.Name,Phone.Number, Hospital.overall.rating, Address, City, State, ZIP.Code)
US.filtered.data <- select(Provider.ID,US.data, State, lon,lat, Hospital.Name,Phone.Number, Hospital.overall.rating, Address, City, State, ZIP.Code)
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
runApp()
View(US.filtered.data)
runApp()
runApp()
runApp()
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
runApp()
runApp()
runApp()
View(US.filtered.data)
runApp()
runApp()
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
runApp()
runApp()
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
runApp()
hospital.spending.vs.HF.data <- left_join(hospital.spending.test, hospital.HF.data)
test <- merge(data.frame(hospital.HF.data, row.names=NULL), data.frame(hospital.spending.data, row.names=NULL), by = 0, all = TRUE)[-1]
runApp()
# Get hospital names for spending
hospital.names.spending <- hospital.spending.test[, 1]
hospital.names.spending <- as.character(hospital.names.spending)
# Filter readmissions by hospital names from spending
hospital.HF.test <- subset(hospital.HF.data, Hospital.Name %in% hospital.names.spending)
runApp()
source('~/Info201/INFO201FinalProject/test.R', echo=TRUE)
runApp()
